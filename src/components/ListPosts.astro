---
import { CollectionEntry, getCollection } from 'astro:content'
import { formatDate } from '../logics'

export interface Props {
  startsWith?: string
  posts?: CollectionEntry<'pages'>['data'][]
}

const { startsWith = 'posts/', posts: postsProps } = Astro.props

let pages: CollectionEntry<'pages'>['data'][] = []

if (!postsProps?.length) {
  // eslint-disable-next-line antfu/no-top-level-await
  pages = (await getCollection('pages', (page) => {
    return page.slug.startsWith(startsWith)
  }))
  .map(page => ({ ...page.data, path: page.data.path ?? page.data.redirect ?? page.slug }))
}

const posts: CollectionEntry<'pages'>['data'] = [...postsProps || pages].sort((a, b) => +new Date(b.date!) - +new Date(a.date!))

const getYear = (a: Date | string | number) => new Date(a).getFullYear()
const isFuture = (a?: Date | string | number) => a && new Date(a) > new Date()
const isSameYear = (a?: Date | string | number, b?: Date | string | number) => a && b && getYear(a) === getYear(b)
function isSameGroup(a: CollectionEntry<'pages'>['data'], b?: CollectionEntry<'pages'>['data']) {
  return (isFuture(a.date) === isFuture(b?.date)) && isSameYear(a.date, b?.date)
}

function getGroupName(p: CollectionEntry<'pages'>['data']) {
  if (isFuture(p.date))
    return 'Upcoming'
  return getYear(p.date!)
}
---


<ul>
  {!posts.length && (
    <div py2 op50>
      {'{ nothing here yet }'}
    </div>
  )}

  {posts.map((route, idx) => (
    <>
      {!isSameGroup(route, pages[idx - 1]) && (
        <div
          select-none
          relative
          h20
          pointer-events-none
          slide-enter
          style={{
            '--enter-stage': idx - 2,
            '--enter-step': '60ms',
          }}
        >
          <span text-8em color-transparent absolute left--3rem top--2rem font-bold text-stroke-2 text-stroke-hex-aaa op10>
            {getGroupName(route)}
          </span>
        </div>
      )}
      <div
        class="slide-enter"
        style={{
          '--enter-stage': idx,
          '--enter-step': '60ms',
        }}
      >

          <a
            href={route.path}
            class="item mb-6 mt-2 block font-normal no-underline"
            {
              ...{
              target: route.path.startsWith('http') ? '_blank' : undefined,
              rel: route.path.startsWith('http') ? 'noopener noreferrer' : undefined,
            }
          }
          >
            <li class="no-underline" flex="~ col md:row gap-2 md:items-center">
              <div class="title text-lg leading-1.2em" flex="~ gap-2 wrap">
                <span align-middle>{route.title}</span>
                {route.redirect && (
                  <span
                    align-middle
                    op50
                    flex-none
                    text-xs
                    ml--1.5
                    i-carbon-arrow-up-right
                    title="External"
                  />
                )}
              </div>

              <div flex="~ gap-2 items-center">
                {route.inperson && (
                  <span
                    align-middle
                    op50
                    flex-none
                    i-ri:group-2-line
                    title="In person"
                  />
                )}
                {(route.recording || route.video) && (
                  <span
                    align-middle
                    op50
                    flex-none
                    i-ri:film-line
                    title="Provided in video"
                  />
                )}
                {route.radio && (
                  <span
                    align-middle
                    op50
                    flex-none
                    i-ri:radio-line
                    title="Provided in radio"
                  />
                )}

                <span text-sm op50 ws-nowrap>
                  {formatDate(route.date!, true)}
                </span>
                {route.duration && (
                  <span text-sm op40 ws-nowrap> · {route.duration}</span>
                )}
                {route.platform && (
                  <span text-sm op40 ws-nowrap> · {route.platform}</span>
                )}
                {route.place && (
                  <span text-sm op40 ws-nowrap md:hidden> · {route.place}</span>
                )}
              </div>
            </li>
            {route.place && (
              <div op50 text-sm hidden mt--2 md:block>
                {route.place}
              </div>
            )}
          </a>
      </div>
    </>
  ))}
</ul>
